"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class WxServiceProvider {
    isFromButton(res) {
        return res.from === 'button';
    }
    isFromMenu(res) {
        return res.from === 'menu';
    }
    getCurrentPagePath() {
        let pages = getCurrentPages();
        let currentPage = pages[pages.length - 1];
        let url = currentPage.route;
        let json = currentPage.options;
        let urlParams = "";
        if (json) {
            urlParams = Object.keys(json)
                .map(function (key) {
                return encodeURIComponent(key) + "=" + encodeURIComponent(json[key]);
            })
                .join("&");
        }
        if (urlParams) {
            return url + "?" + urlParams;
        }
        return url;
    }
    setPageTitle(title) {
        wx.setNavigationBarTitle({
            title: title
        });
    }
    makePhoneCall(phoneNumber) {
        phoneNumber && wx.makePhoneCall({
            phoneNumber: phoneNumber
        });
    }
    checkVersionUpdate() {
        const updateManager = wx.getUpdateManager();
        updateManager.onCheckForUpdate(function (res) {
            console.log("是否有更新：" + res.hasUpdate);
        });
        updateManager.onUpdateReady(function () {
            wx.showModal({
                title: '更新提示',
                content: '新版本已经准备好，是否重启应用？',
                success(res) {
                    if (res.confirm) {
                        updateManager.applyUpdate();
                    }
                }
            });
        });
        updateManager.onUpdateFailed(function () {
            console.log("新版本下载失败");
        });
    }
}
exports.WxServiceProvider = WxServiceProvider;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid3gtc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInd4LXNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFFQSxNQUFhLGlCQUFpQjtJQUtuQixZQUFZLENBQUMsR0FBa0I7UUFDbEMsT0FBTyxHQUFHLENBQUMsSUFBSSxLQUFLLFFBQVEsQ0FBQztJQUNqQyxDQUFDO0lBS00sVUFBVSxDQUFDLEdBQWtCO1FBQ2hDLE9BQU8sR0FBRyxDQUFDLElBQUksS0FBSyxNQUFNLENBQUM7SUFDL0IsQ0FBQztJQUtNLGtCQUFrQjtRQUNyQixJQUFJLEtBQUssR0FBRyxlQUFlLEVBQUUsQ0FBQTtRQUM3QixJQUFJLFdBQVcsR0FBUSxLQUFLLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQTtRQUM5QyxJQUFJLEdBQUcsR0FBRyxXQUFXLENBQUMsS0FBSyxDQUFBO1FBQzNCLElBQUksSUFBSSxHQUFHLFdBQVcsQ0FBQyxPQUFPLENBQUE7UUFFOUIsSUFBSSxTQUFTLEdBQUcsRUFBRSxDQUFDO1FBQ25CLElBQUksSUFBSSxFQUFFO1lBQ04sU0FBUyxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO2lCQUN4QixHQUFHLENBQUMsVUFBVSxHQUFHO2dCQUNkLE9BQU8sa0JBQWtCLENBQUMsR0FBRyxDQUFDLEdBQUcsR0FBRyxHQUFHLGtCQUFrQixDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1lBQ3pFLENBQUMsQ0FBQztpQkFDRCxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7U0FDbEI7UUFDRCxJQUFJLFNBQVMsRUFBRTtZQUNYLE9BQU8sR0FBRyxHQUFHLEdBQUcsR0FBRyxTQUFTLENBQUM7U0FDaEM7UUFDRCxPQUFPLEdBQUcsQ0FBQztJQUNmLENBQUM7SUFNTSxZQUFZLENBQUMsS0FBYTtRQUM3QixFQUFFLENBQUMscUJBQXFCLENBQUM7WUFDckIsS0FBSyxFQUFFLEtBQUs7U0FDZixDQUFDLENBQUM7SUFDUCxDQUFDO0lBT00sYUFBYSxDQUFDLFdBQW1CO1FBQ3BDLFdBQVcsSUFBSSxFQUFFLENBQUMsYUFBYSxDQUFDO1lBQzVCLFdBQVcsRUFBRSxXQUFXO1NBQzNCLENBQUMsQ0FBQztJQUNQLENBQUM7SUFLTSxrQkFBa0I7UUFDckIsTUFBTSxhQUFhLEdBQUcsRUFBRSxDQUFDLGdCQUFnQixFQUFFLENBQUE7UUFDM0MsYUFBYSxDQUFDLGdCQUFnQixDQUFDLFVBQVUsR0FBRztZQUV4QyxPQUFPLENBQUMsR0FBRyxDQUFDLFFBQVEsR0FBRyxHQUFHLENBQUMsU0FBUyxDQUFDLENBQUE7UUFDekMsQ0FBQyxDQUFDLENBQUE7UUFDRixhQUFhLENBQUMsYUFBYSxDQUFDO1lBQ3hCLEVBQUUsQ0FBQyxTQUFTLENBQUM7Z0JBQ1QsS0FBSyxFQUFFLE1BQU07Z0JBQ2IsT0FBTyxFQUFFLGtCQUFrQjtnQkFDM0IsT0FBTyxDQUFDLEdBQUc7b0JBQ1AsSUFBSSxHQUFHLENBQUMsT0FBTyxFQUFFO3dCQUViLGFBQWEsQ0FBQyxXQUFXLEVBQUUsQ0FBQTtxQkFDOUI7Z0JBQ0wsQ0FBQzthQUNKLENBQUMsQ0FBQTtRQUNOLENBQUMsQ0FBQyxDQUFBO1FBQ0YsYUFBYSxDQUFDLGNBQWMsQ0FBQztZQUV6QixPQUFPLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFBO1FBQzFCLENBQUMsQ0FBQyxDQUFBO0lBQ04sQ0FBQztDQUVKO0FBdkZELDhDQXVGQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFd4U2hhcmVCdG5SZXMgfSBmcm9tIFwiLi4vY29uc3RhbnRzXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgV3hTZXJ2aWNlUHJvdmlkZXIge1xyXG5cclxuICAgIC8qKlxyXG4gICAgICog5piv5ZCm5p2l6Ieq5oyJ6ZKu55qE6L2s5Y+RXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBpc0Zyb21CdXR0b24ocmVzOiBXeFNoYXJlQnRuUmVzKTogYm9vbGVhbiB7XHJcbiAgICAgICAgcmV0dXJuIHJlcy5mcm9tID09PSAnYnV0dG9uJztcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOaYr+WQpuadpeiHquWPs+S4iuinkueahOi9rOWPkVxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgaXNGcm9tTWVudShyZXM6IFd4U2hhcmVCdG5SZXMpOiBib29sZWFuIHtcclxuICAgICAgICByZXR1cm4gcmVzLmZyb20gPT09ICdtZW51JztcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOiOt+WPluW9k+WJjemhtemdoui3r+W+hO+8iOi3r+eUse+8iVxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgZ2V0Q3VycmVudFBhZ2VQYXRoKCk6IHN0cmluZyB7XHJcbiAgICAgICAgbGV0IHBhZ2VzID0gZ2V0Q3VycmVudFBhZ2VzKCkgLy/ojrflj5bliqDovb3nmoTpobXpnaJcclxuICAgICAgICBsZXQgY3VycmVudFBhZ2U6IGFueSA9IHBhZ2VzW3BhZ2VzLmxlbmd0aCAtIDFdIC8v6I635Y+W5b2T5YmN6aG16Z2i55qE5a+56LGhXHJcbiAgICAgICAgbGV0IHVybCA9IGN1cnJlbnRQYWdlLnJvdXRlIC8v5b2T5YmN6aG16Z2idXJsXHJcbiAgICAgICAgbGV0IGpzb24gPSBjdXJyZW50UGFnZS5vcHRpb25zIC8v5aaC5p6c6KaB6I635Y+WdXJs5Lit5omA5bim55qE5Y+C5pWw5Y+v5Lul5p+l55yLb3B0aW9uc1xyXG4gICAgICAgIC8vanNvbui9rHVybOWPguaVsFxyXG4gICAgICAgIGxldCB1cmxQYXJhbXMgPSBcIlwiO1xyXG4gICAgICAgIGlmIChqc29uKSB7XHJcbiAgICAgICAgICAgIHVybFBhcmFtcyA9IE9iamVjdC5rZXlzKGpzb24pXHJcbiAgICAgICAgICAgICAgICAubWFwKGZ1bmN0aW9uIChrZXkpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZW5jb2RlVVJJQ29tcG9uZW50KGtleSkgKyBcIj1cIiArIGVuY29kZVVSSUNvbXBvbmVudChqc29uW2tleV0pO1xyXG4gICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgIC5qb2luKFwiJlwiKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHVybFBhcmFtcykge1xyXG4gICAgICAgICAgICByZXR1cm4gdXJsICsgXCI/XCIgKyB1cmxQYXJhbXM7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB1cmw7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDliqjmgIHorr7nva7pobXpnaJ0aXRsZVxyXG4gICAgICogQHBhcmFtIHRpdGxlIFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc2V0UGFnZVRpdGxlKHRpdGxlOiBzdHJpbmcpIHtcclxuICAgICAgICB3eC5zZXROYXZpZ2F0aW9uQmFyVGl0bGUoe1xyXG4gICAgICAgICAgICB0aXRsZTogdGl0bGVcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOaLqOaJk+eUteivnVxyXG4gICAgICogaHR0cHM6Ly9kZXZlbG9wZXJzLndlaXhpbi5xcS5jb20vbWluaXByb2dyYW0vZGV2L2FwaS93eC5tYWtlUGhvbmVDYWxsLmh0bWxcclxuICAgICAqIEBwYXJhbSBwaG9uZU51bWJlciBcclxuICAgICAqL1xyXG4gICAgcHVibGljIG1ha2VQaG9uZUNhbGwocGhvbmVOdW1iZXI6IHN0cmluZykge1xyXG4gICAgICAgIHBob25lTnVtYmVyICYmIHd4Lm1ha2VQaG9uZUNhbGwoe1xyXG4gICAgICAgICAgICBwaG9uZU51bWJlcjogcGhvbmVOdW1iZXJcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIHd45bCP56iL5bqPIOajgOafpeabtOaWsFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgY2hlY2tWZXJzaW9uVXBkYXRlKCkge1xyXG4gICAgICAgIGNvbnN0IHVwZGF0ZU1hbmFnZXIgPSB3eC5nZXRVcGRhdGVNYW5hZ2VyKClcclxuICAgICAgICB1cGRhdGVNYW5hZ2VyLm9uQ2hlY2tGb3JVcGRhdGUoZnVuY3Rpb24gKHJlcykge1xyXG4gICAgICAgICAgICAvLyDor7fmsYLlrozmlrDniYjmnKzkv6Hmga/nmoTlm57osINcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCLmmK/lkKbmnInmm7TmlrDvvJpcIiArIHJlcy5oYXNVcGRhdGUpXHJcbiAgICAgICAgfSlcclxuICAgICAgICB1cGRhdGVNYW5hZ2VyLm9uVXBkYXRlUmVhZHkoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB3eC5zaG93TW9kYWwoe1xyXG4gICAgICAgICAgICAgICAgdGl0bGU6ICfmm7TmlrDmj5DnpLonLFxyXG4gICAgICAgICAgICAgICAgY29udGVudDogJ+aWsOeJiOacrOW3sue7j+WHhuWkh+Wlve+8jOaYr+WQpumHjeWQr+W6lOeUqO+8nycsXHJcbiAgICAgICAgICAgICAgICBzdWNjZXNzKHJlcykge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChyZXMuY29uZmlybSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyDmlrDnmoTniYjmnKzlt7Lnu4/kuIvovb3lpb3vvIzosIPnlKggYXBwbHlVcGRhdGUg5bqU55So5paw54mI5pys5bm26YeN5ZCvXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHVwZGF0ZU1hbmFnZXIuYXBwbHlVcGRhdGUoKVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9KVxyXG4gICAgICAgIHVwZGF0ZU1hbmFnZXIub25VcGRhdGVGYWlsZWQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAvLyDmlrDniYjmnKzkuIvovb3lpLHotKVcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCLmlrDniYjmnKzkuIvovb3lpLHotKVcIilcclxuICAgICAgICB9KVxyXG4gICAgfVxyXG5cclxufSJdfQ==